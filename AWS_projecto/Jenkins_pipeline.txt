pipeline{
    agent any
    tools {
        terraform 'terraform'
    }
    stages{
        
        stage('Git Checkoutt') {
            steps{
                git credentialsId: 'jenkins_example_private', url: 'https://github.com/srg6rt/DevOps_tasks_2023'
                sh 'ls -la'
                sh 'pwd'
                
            }
        }
        
                stage('Git Test') {
            steps{
                
                sh '''SEC_K=\$(python3 -c \'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())\')
                echo SECRET_KEY=\$SEC_K > /var/lib/jenkins/workspace/terraform_git/AWS_projecto/aussichtsturm/aussichtsturm/.env
                cat /var/lib/jenkins/workspace/terraform_git/AWS_projecto/aussichtsturm/aussichtsturm/.env
                python3 /var/lib/jenkins/workspace/terraform_git/AWS_projecto/aussichtsturm/manage.py test youtube_comments_grabber.tests.SimpleTest.test_status'''
                
            }
        }
      

        stage('Terraform Init') {
            steps{
                sh 'terraform init'
            }
        }

        stage('Terraform Plan') {
            steps{
                
                withCredentials([
                    aws(credentialsId: 'jenkins-test-user', 
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                sh 'terraform plan'
                    }
                
            }
        }
        
        stage('Terraform Apply') {
            steps{
                
                withCredentials([
                    aws(credentialsId: 'jenkins-test-user', 
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                sh 'terraform apply -replace aws_instance.web-server-instance --auto-approve'
                    }
                
            }
        }
        
    }
    
}